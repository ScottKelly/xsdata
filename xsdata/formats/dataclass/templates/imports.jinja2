from datetime import datetime
from sqlalchemy import Column, ForeignKey, String, Integer, Numeric, DateTime, Boolean, LargeBinary, Enum as SqlEnum, func
from sqlalchemy.orm import relationship
from sqlalchemy.dialects.postgresql import JSONB, ARRAY
from common.db import SqlXmlDateTime, mapper_registry

{%- for source, items in imports|groupby("source") -%}
{%- if items|length == 1 -%}
from {{ source | import_module(module)  }} import {{ items[0].name | import_class(alias=items[0].alias) }}
{% else -%}
from {{ source | import_module(module) }} import (
{%- for item in items %}
    {{ item.name | import_class(alias=item.alias) }},
{%- endfor %}
)
{% endif -%}
{%- endfor %}
